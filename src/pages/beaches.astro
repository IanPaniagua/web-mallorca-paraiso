---
import Layout from '../layouts/Layout.astro';
import BeachesSidebar from '../components/BeachesSidebar';
import CardBeachDetail from '../components/CardBeachDetail';
import type { Beach, BeachFilters } from '../api/types/beach.types';
import { API_ENDPOINTS } from '../config/api';
import { fetchFromBackend } from '../utils/api';

// Fetch data at build time (equivalent to getStaticProps)
const beaches = await fetchFromBackend<Beach[]>(API_ENDPOINTS.beaches.getAll);

// Extract unique zones, localities and categories from the data
const regions = [...new Set(beaches.map(beach => beach.locality.zone.name))];
const towns = [...new Set(beaches.map(beach => beach.locality.name))];
const types = [...new Set(beaches.map(beach => beach.category))];

// Configuraci√≥n de paginaci√≥n
const ITEMS_PER_PAGE = 9;

// Generate metadata for SEO
const title = "Playas de Mallorca - Calas y Playas Paradis√≠acas";
const description = "Descubre los rincones m√°s paradis√≠acos de la costa mallorquina. Encuentra informaci√≥n detallada sobre las mejores playas y calas de Mallorca.";
---

<Layout title={title}>
  <head slot="head">
    <meta name="description" content={description} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
  </head>

  <div slot="header">
    <div class="py-2">
      <h1 class="text-3xl sm:text-4xl md:text-5xl font-display bg-gradient-to-r from-[#0066FF] to-[#00D4FF] bg-clip-text text-transparent mb-4">
        Playas y Calas
      </h1>
      <p class="text-base sm:text-lg text-gray-600 max-w-2xl mx-auto">
        Descubre los rincones m√°s paradis√≠acos de la costa mallorquina.
      </p>
    </div>
  </div>

  <script define:vars={{ regions, towns, types, ITEMS_PER_PAGE, beaches }}>
    let currentPage = 1;
    let visibleBeaches = beaches;
    let selectedBeachId = null;

    function showBeachDetails(beachId) {
      selectedBeachId = beachId;
      const detailComponent = document.querySelector(`beach-detail-${beachId}`);
      if (detailComponent) {
        detailComponent.setAttribute('isOpen', 'true');
      }
    }

    function hideBeachDetails() {
      if (selectedBeachId) {
        const detailComponent = document.querySelector(`beach-detail-${selectedBeachId}`);
        if (detailComponent) {
          detailComponent.setAttribute('isOpen', 'false');
        }
        selectedBeachId = null;
      }
    }

    // Funciones para el modal
    function openModal(beachId) {
      const modal = document.getElementById(`modal-${beachId}`);
      const backdrop = document.getElementById('modal-backdrop');
      document.body.style.overflow = 'hidden';
      modal.classList.remove('opacity-0', 'pointer-events-none');
      backdrop.classList.remove('opacity-0', 'pointer-events-none');
    }

    function closeModal(beachId) {
      const modal = document.getElementById(`modal-${beachId}`);
      const backdrop = document.getElementById('modal-backdrop');
      document.body.style.overflow = 'auto';
      modal.classList.add('opacity-0', 'pointer-events-none');
      backdrop.classList.add('opacity-0', 'pointer-events-none');
    }

    function updateVisibleBeaches() {
      const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;
      const endIndex = startIndex + ITEMS_PER_PAGE;
      const articles = document.querySelectorAll('#beachesGrid article');
      
      articles.forEach((article, index) => {
        if (index >= startIndex && index < endIndex) {
          article.style.display = 'flex';
        } else {
          article.style.display = 'none';
        }
      });

      // Actualizar botones y contador
      const totalPages = Math.ceil(visibleBeaches.length / ITEMS_PER_PAGE);
      document.getElementById('currentPage').textContent = currentPage.toString();
      document.getElementById('totalPages').textContent = totalPages.toString();
      document.getElementById('prevPage').disabled = currentPage === 1;
      document.getElementById('nextPage').disabled = currentPage === totalPages;
    }

    // Function to filter beaches
    function filterBeaches(filters) {
      const articles = document.querySelectorAll('#beachesGrid article');
      let visibleCount = 0;
      
      articles.forEach(article => {
        const region = article.dataset.region;
        const town = article.dataset.town;
        const type = article.dataset.type;
        const name = article.dataset.name;
        
        const matchesSearch = !filters.search || 
          name.toLowerCase().includes(filters.search.toLowerCase());
        
        const matchesRegion = !filters.region || 
          region === filters.region;
        
        const matchesTown = !filters.town || 
          town === filters.town;
        
        const matchesType = !filters.type || 
          type === filters.type;
        
        const isVisible = matchesSearch && matchesRegion && 
          matchesTown && matchesType;
        
        if (isVisible) visibleCount++;
        article.style.display = isVisible ? 'flex' : 'none';
      });

      visibleBeaches = Array.from(articles).filter(article => article.style.display !== 'none');
      currentPage = 1;
      updateVisibleBeaches();
    }

    // Initialize filters and pagination when page loads
    document.addEventListener('DOMContentLoaded', () => {
      // A√±adir eventos de paginaci√≥n
      document.getElementById('prevPage').addEventListener('click', () => {
        if (currentPage > 1) {
          currentPage--;
          updateVisibleBeaches();
        }
      });

      document.getElementById('nextPage').addEventListener('click', () => {
        const totalPages = Math.ceil(visibleBeaches.length / ITEMS_PER_PAGE);
        if (currentPage < totalPages) {
          currentPage++;
          updateVisibleBeaches();
        }
      });

      // Cerrar modal con la tecla Escape
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          const modals = document.querySelectorAll('[id^="modal-"]');
          modals.forEach(modal => {
            if (!modal.classList.contains('opacity-0')) {
              const beachId = modal.id.replace('modal-', '');
              closeModal(beachId);
            }
          });
        }
      });

      filterBeaches({ search: '', region: '', town: '', type: '' });
    });

    // Expose functions to window for onclick handlers
    window.showBeachDetails = showBeachDetails;
    window.hideBeachDetails = hideBeachDetails;
  </script>

  <div class="min-h-screen flex flex-col">
    <!-- Modal Backdrop -->
    <div id="modal-backdrop" class="fixed inset-0 bg-black/60 backdrop-blur-sm z-40 opacity-0 pointer-events-none transition-opacity duration-300"></div>

    <!-- Main Content Section -->
    <div class="flex flex-1">
      <div class="w-64 sticky top-0 h-screen">
        <BeachesSidebar 
          client:load
          regions={regions}
          towns={towns}
          types={types}
        />
      </div>
      <div class="flex-1 p-6">
        <div id="beachesGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {beaches.map((beach) => (
            <>
              <article 
                class="bg-gradient-to-br from-white to-[#00D4FF]/5 rounded-lg overflow-hidden shadow-lg flex flex-col"
                data-region={beach.locality.zone.name}
                data-town={beach.locality.name}
                data-type={beach.category}
                data-name={beach.name.toLowerCase()}
                data-beach-id={beach.id}
              >
                <div class="relative w-full h-48">
                  <img 
                    src={beach.image || 'https://mallorca-paraiso-web.s3.eu-central-1.amazonaws.com/beach.jpg'} 
                    alt={`Playa ${beach.name}`}
                    class="w-full h-full object-cover"
                    loading="lazy"
                    onerror="this.src='https://mallorca-paraiso-web.s3.eu-central-1.amazonaws.com/beach.jpg'; this.onerror=null;"
                  />
                </div>

                <div class="p-6 flex flex-col flex-1">
                  <h3 class="text-xl font-display bg-gradient-to-r from-[#0066FF] to-[#00D4FF] bg-clip-text text-transparent mb-2">
                    {beach.name}
                  </h3>
                  <p class="text-xs text-gray-600 flex items-center gap-1.5 mb-3">
                    <span class="text-[#0066FF]">üìç</span>
                    {beach.locality.name}, {beach.locality.zone.name}
                  </p>
                  
                  <div class="flex items-center gap-2 text-xs mt-auto">
                    <button 
                      class="text-[#0066FF] hover:underline inline-flex items-center gap-1 show-details"
                      data-beach-id={beach.id}
                    >
                      <span>‚ú®</span>
                      Ver detalles
                    </button>
                    <span class="text-gray-300">‚Ä¢</span>
                    <a 
                      href={`https://www.google.com/maps?q=${beach.latitude},${beach.longitude}`}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-[#0066FF] hover:underline inline-flex items-center gap-1"
                    >
                      <span>üó∫Ô∏è</span>
                      C√≥mo llegar
                    </a>
                  </div>
                </div>
              </article>

              <CardBeachDetail
                client:load
                beach={beach}
                onClose={() => {}}
                isOpen={false}
                id={`beach-detail-${beach.id}`}
              />
            </>
          ))}
        </div>

        <!-- Controles de paginaci√≥n -->
        <div class="mt-8 mb-8 flex justify-center items-center gap-2">
          <button 
            id="prevPage" 
            class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Anterior
          </button>
          <span class="text-gray-600 mx-4">
            P√°gina <span id="currentPage">1</span> de <span id="totalPages">1</span>
          </span>
          <button 
            id="nextPage" 
            class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            Siguiente
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Consejos Section (Outside of main content) -->
  <section class="w-full bg-gradient-to-b from-[#0066FF]/20 to-[#00D4FF]/20 py-12 px-4">
    <div class="max-w-3xl mx-auto text-center">
      <h2 class="text-3xl font-display bg-gradient-to-r from-[#0066FF] to-[#00D4FF] bg-clip-text text-transparent mb-6">
        Consejos para tu visita
      </h2>
      <div class="grid md:grid-cols-3 gap-6">
        <div>
          <div class="text-2xl mb-2">üåä</div>
          <h3 class="font-display text-lg mb-2">Mejor temporada</h3>
          <p class="text-gray-600">Mayo a Octubre son los meses ideales para disfrutar del mar</p>
        </div>
        <div>
          <div class="text-2xl mb-2">üß¥</div>
          <h3 class="font-display text-lg mb-2">Protecci√≥n</h3>
          <p class="text-gray-600">No olvides protector solar y sombrilla en las calas sin servicios</p>
        </div>
        <div>
          <div class="text-2xl mb-2">‚è∞</div>
          <h3 class="font-display text-lg mb-2">Horario</h3>
          <p class="text-gray-600">Visita temprano para encontrar mejor parking y menos gente</p>
        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  let activeDetailComponent: HTMLElement | null = null;

  function showBeachDetails(beachId: string | number) {
    // Ocultar el modal activo si existe
    if (activeDetailComponent) {
      activeDetailComponent.style.display = 'none';
    }

    // Mostrar el nuevo modal
    const detailComponent = document.getElementById(`beach-detail-${beachId}`);
    if (detailComponent) {
      detailComponent.style.display = 'flex';
      activeDetailComponent = detailComponent;
      // Bloquear scroll del body
      document.body.style.overflow = 'hidden';
    }
  }

  function hideBeachDetails() {
    if (activeDetailComponent) {
      activeDetailComponent.style.display = 'none';
      activeDetailComponent = null;
      // Restaurar scroll del body
      document.body.style.overflow = 'auto';
    }
  }

  // Event Listeners
  document.addEventListener('click', (e: MouseEvent) => {
    const target = e.target as HTMLElement;
    
    // Abrir modal
    const detailButton = target.closest('.show-details') as HTMLElement;
    if (detailButton) {
      const beachId = detailButton.dataset.beachId;
      if (beachId) {
        showBeachDetails(beachId);
      }
    }

    // Cerrar modal al hacer clic en el backdrop o el bot√≥n de cerrar
    if (target.classList.contains('backdrop-blur-sm') || 
        target.closest('button[aria-label="Cerrar modal"]') ||
        target.closest('path')) {
      hideBeachDetails();
    }
  });

  // Cerrar con la tecla Escape
  document.addEventListener('keydown', (e: KeyboardEvent) => {
    if (e.key === 'Escape') {
      hideBeachDetails();
    }
  });
</script>

